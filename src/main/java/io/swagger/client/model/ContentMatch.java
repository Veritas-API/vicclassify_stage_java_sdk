/*
 * Veritas Information Classifier (VIC)
 * APIs
 *
 * OpenAPI spec version: Resource Specific
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Details of a classification match against a particular part of a document (typically a word or phrase).
 */
@ApiModel(description = "Details of a classification match against a particular part of a document (typically a word or phrase).")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-04-12T22:54:18.445Z")
public class ContentMatch {
  @SerializedName("offset")
  private Long offset = null;

  @SerializedName("length")
  private Long length = null;

  @SerializedName("location")
  private String location = null;

  @SerializedName("content")
  private String content = null;

  @SerializedName("context")
  private String context = null;

  public ContentMatch offset(Long offset) {
    this.offset = offset;
    return this;
  }

   /**
   * The offset (in characters) of the match within the classified text.  The classified text is the text conversion of the original document, so this offset may not be directly usable by a client with only access to the original document.
   * @return offset
  **/
  @ApiModelProperty(example = "null", value = "The offset (in characters) of the match within the classified text.  The classified text is the text conversion of the original document, so this offset may not be directly usable by a client with only access to the original document.")
  public Long getOffset() {
    return offset;
  }

  public void setOffset(Long offset) {
    this.offset = offset;
  }

  public ContentMatch length(Long length) {
    this.length = length;
    return this;
  }

   /**
   * The length of the content match, in characters.
   * @return length
  **/
  @ApiModelProperty(example = "null", value = "The length of the content match, in characters.")
  public Long getLength() {
    return length;
  }

  public void setLength(Long length) {
    this.length = length;
  }

  public ContentMatch location(String location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public ContentMatch content(String content) {
    this.content = content;
    return this;
  }

   /**
   * Content that matched the rule (e.g. a word or phrase), where available.
   * @return content
  **/
  @ApiModelProperty(example = "null", value = "Content that matched the rule (e.g. a word or phrase), where available.")
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }

  public ContentMatch context(String context) {
    this.context = context;
    return this;
  }

   /**
   * The matching content with some surrounding context, where available.
   * @return context
  **/
  @ApiModelProperty(example = "null", value = "The matching content with some surrounding context, where available.")
  public String getContext() {
    return context;
  }

  public void setContext(String context) {
    this.context = context;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentMatch contentMatch = (ContentMatch) o;
    return Objects.equals(this.offset, contentMatch.offset) &&
        Objects.equals(this.length, contentMatch.length) &&
        Objects.equals(this.location, contentMatch.location) &&
        Objects.equals(this.content, contentMatch.content) &&
        Objects.equals(this.context, contentMatch.context);
  }

  @Override
  public int hashCode() {
    return Objects.hash(offset, length, location, content, context);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentMatch {\n");
    
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

